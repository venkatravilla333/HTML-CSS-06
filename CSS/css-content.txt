
                                         CSS CONTENT
                                         ===========


1. What is CSS
   ===========

CSS stands for Cascading Style Sheet. It is a styling language, by using CSS we can style the html content or elements on webpage by using CSS properties. CSS properties will be in key value pair. 


2. How many ways we can add css to html elements
   =============================================


   1) Inline 

   - By using style attribute we can apply css directly to that html element. By using inline style we can apply only css to only one element at a time.

   2) Internal

   - By using style tag in head tag we can apply css to many html elements in the same html file at a time html elements. 

   3) Extrenal

   - By using external style sheet we can apply css to many html elements in different html files at a time. We can link external css file to html file by using link tag in head tag.


   3. CSS selectors
   =============
 
  - CSS selectors are used to select the HTML elements you want to style.

  - We can divide CSS selectors into several categories:

   1. Simple selectors (select elements based on tag, id, class) (3 selectors)

   2. Combinator selectors (select elements based on a specific relationship between them)

      a) Descendent selector => div p {} - all childs
      b) Child selector      => div>p {} - direct childs    
      c) Adjacent sibling    => div+p {} - next one (sibling)
      d) General sibling     => div~p {} - next all siblings

   3. Pseudo-class selectors (select elements based on a certain state)

   4. Pseudo-elements selectors (select and style a part of an element)

   5. Attribute selectors (select elements based on an attribute or attribute value) (4 selectors)

   6. Universal Selector (The universal selector (*) selects all HTML elements on the page)

   7. Grouping Selector (To group selectors, separate each selector with a comma)

      Allows you to apply the same styles to multiple selectors.

      Example: h1, h2, h3 { font-family: Arial, sans-serif; }


1.Type (Element) Selector:
  -----------------------

Selects elements by their HTML tag name.

Example: p { color: blue; }

2.Class Selector:
  --------------

Selects elements by their class attribute.

Example: .my-class { font-weight: bold; }

3.ID Selector:
  -----------

Selects a single element by its unique ID attribute.

Example: #my-id { background-color: yellow; }

4.Universal Selector:
  ------------------

Selects all elements on the page.

Example: * { margin: 0; }

5.Descendant Selector (all childs):
  -------------------

Selects an element that is a descendant of another element.

Example: ul li { list-style: square; }

6.Child Selector (direct child):
  --------------

Selects an element that is a direct child of another element.

Example: ul > li { font-style: italic; }

7.Adjacent Sibling Selector (next sibling):
  -------------------------

Selects an element that is immediately preceded by another element.

Example: h2 + p { color: red; }

8.General Sibling Selector (next all siblings):
  ------------------------

Selects elements that are siblings of a specified element.

Example: h2 ~ p { font-size: 18px; }


9.Pseudo-Class Selector:
   ---------------------

Selects elements based on a specific state or interaction, such as :hover, :active, and :focus.

Example: a:hover { text-decoration: underline; }

10.Pseudo-Element Selector:
   -----------------------

Selects and styles a part of an element's content, such as  

=> ::first-letter ::first-line and ::before and ::after

Example: p::before { content: "Note: "; }

Pseudo-elements in CSS are used to style a specific part of an element. They are denoted by double colons (::) and are often used with the ::before and ::after pseudo-elements to insert content before or after an element. Here's an example of using the ::before pseudo-element to add content before an element:

.myclass::before {
  content: "This is content";
  font-weight: bold;
  color: red;
}

.myclass::after {
  content: "This is content";
  font-weight: bold;
  color: white;
}


11.Grouping Selector:
   -----------------

Allows you to apply the same styles to multiple selectors.

Example: h1, h2, h3 { font-family: Arial, sans-serif; }


12.Attribute Selector:
  ------------------

Selects elements based on the value of their attributes.

Example: input[type="text"] { border: 1px solid #ccc; }



13.Attribute Value Starts With Selector:
   ------------------------------------

Selects elements whose attribute values start with a specified string.

Example: [href^="https://"] { color: blue; }

14.Attribute Value Ends With Selector:
   ----------------------------------

Selects elements whose attribute values end with a specified string.

Example: [src$=".jpg"] { border: 1px solid #ccc; }

15.Attribute Value Contains Selector:
   ---------------------------------

Selects elements whose attribute values contain a specified string.

Example: [alt*="cat"] { border: 2px solid orange; }

